{"version":3,"file":"konvas.js","sources":["../src/node.ts","../src/index.ts","../src/utils/dom.ts"],"sourcesContent":["/**\n *\n */\nclass Node {\n  private el: Element\n  private data: any\n\n  constructor(data: any) {\n    this.el = document.createElement('div')\n\n    this.el.classList.add('draggable')\n    this.data = { ...data }\n\n    this.initStyle()\n    this.draw()\n  }\n\n  private initStyle() {\n    const el = this.el as HTMLElement\n    el.style.position = 'absolute'\n  }\n\n  get x(): number {\n    return 0\n  }\n\n  get y(): number {\n    return 0\n  }\n\n  get width() {\n    return this.data.width\n  }\n\n  set width(val) {\n    this.data.width = val\n  }\n\n  get height() {\n    return this.data.height\n  }\n\n  set height(val) {\n    this.data.height = val\n  }\n\n  get scale() {\n    return this.data.scale || 1\n  }\n\n  set scale(val) {\n    this.data.scale = val\n    this.draw()\n  }\n\n  public draw() {\n    const el = this.el as HTMLElement\n\n    el.style.width = `${ this.width * this.scale }px`\n    el.style.height = `${ this.height * this.scale }px`\n  }\n}\n\nexport default Node\n","import { query } from './utils/dom'\nimport Node from './node'\n\n/*\ninterface IOptions {\n  width?: number;\n  height?: number;\n}\n*/\n\nclass Konvas {\n  public elem: Element\n  private options: any\n  private nodes: Node[]\n\n  constructor(el: Element | string, options = { width: 300, height: 150 } ) {\n    this.elem = query(el)\n    this.options = options\n    this.nodes = []\n    this.initStyle()\n  }\n\n  private initStyle() {\n    this.elem.classList.add('konvas')\n    const elem = (this.elem as HTMLElement)\n    elem.style.position = 'relative'\n    elem.style.transformOrigin = '0 0'\n    elem.style.width = `${this.options.width}px`\n    elem.style.height = `${this.options.height}px`\n  }\n\n  public addNode(node: Node | any) {\n    if (node instanceof Node) {\n      this.nodes.push(node)\n    } else {\n      node = new Node(node)\n      this.elem.appendChild(node.el)\n      this.nodes.push(node)\n    }\n  }\n}\n\nexport default Konvas\n","export function query(el: string | Element): Element {\n  if (typeof el === 'string') {\n    const node = document.querySelector(el)\n    if (!node) {\n      return document.createElement('div')\n    }\n    return node \n  } else {\n    return el\n  }\n}\n"],"names":["data","this","el","document","createElement","classList","add","initStyle","draw","Node","style","position","Object","width","val","height","scale","options","elem","node","querySelector","query","nodes","Konvas","transformOrigin","push","appendChild"],"mappings":"sWAOE,WAAYA,GACVC,KAAKC,GAAKC,SAASC,cAAc,OAEjCH,KAAKC,GAAGG,UAAUC,IAAI,aACtBL,KAAKD,UAAYA,GAEjBC,KAAKM,YACLN,KAAKO,OA+CT,OA5CUC,sBAAR,WACaR,KAAKC,GACbQ,MAAMC,SAAW,YAGtBC,sBAAIH,qBAAJ,WACE,OAAO,mCAGTG,sBAAIH,qBAAJ,WACE,OAAO,mCAGTG,sBAAIH,yBAAJ,WACE,OAAOR,KAAKD,KAAKa,WAGnB,SAAUC,GACRb,KAAKD,KAAKa,MAAQC,mCAGpBF,sBAAIH,0BAAJ,WACE,OAAOR,KAAKD,KAAKe,YAGnB,SAAWD,GACTb,KAAKD,KAAKe,OAASD,mCAGrBF,sBAAIH,yBAAJ,WACE,OAAOR,KAAKD,KAAKgB,OAAS,OAG5B,SAAUF,GACRb,KAAKD,KAAKgB,MAAQF,EAClBb,KAAKO,wCAGAC,iBAAP,WACE,IAAMP,EAAKD,KAAKC,GAEhBA,EAAGQ,MAAMG,MAAYZ,KAAKY,MAAQZ,KAAKe,WACvCd,EAAGQ,MAAMK,OAAad,KAAKc,OAASd,KAAKe,mCC5C3C,WAAYd,EAAsBe,gBAAAA,GAAYJ,MAAO,IAAKE,OAAQ,MAChEd,KAAKiB,cChBahB,GACpB,GAAkB,iBAAPA,EAAiB,CAC1B,IAAMiB,EAAOhB,SAASiB,cAAclB,GACpC,OAAKiB,GACIhB,SAASC,cAAc,OAIhC,OAAOF,EDQKmB,CAAMnB,GAClBD,KAAKgB,QAAUA,EACfhB,KAAKqB,SACLrB,KAAKM,YAqBT,OAlBUgB,sBAAR,WACEtB,KAAKiB,KAAKb,UAAUC,IAAI,UACxB,IAAMY,EAAQjB,KAAKiB,KACnBA,EAAKR,MAAMC,SAAW,WACtBO,EAAKR,MAAMc,gBAAkB,MAC7BN,EAAKR,MAAMG,MAAWZ,KAAKgB,QAAQJ,WACnCK,EAAKR,MAAMK,OAAYd,KAAKgB,QAAQF,aAG/BQ,oBAAP,SAAeJ,GACTA,aAAgBV,EAClBR,KAAKqB,MAAMG,KAAKN,IAEhBA,EAAO,IAAIV,EAAKU,GAChBlB,KAAKiB,KAAKQ,YAAYP,EAAKjB,IAC3BD,KAAKqB,MAAMG,KAAKN"}